
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>

    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" type="text/css" href="~/static/ext-js/resources/css/ext-all.css" />
    <link rel="stylesheet" type="text/css" href="~/static/ext-js/resources/ux/fileuploadfield.css" />

    <script type="text/javascript" src="~/static/ext-js/adapter/ext/ext-base.js"></script>
    <script type="text/javascript" src="~/static/ext-js/ext-all.js"></script>
    <script type="text/javascript" src="~/static/ext-js/ux/FileUploadField.js"></script>
    <script type="text/javascript" src="@Url.Content("/DirectApi")"></script>
    <title>Документооборот</title>
<script type="text/javascript">

    Ext.onReady(function () {



        Ext.Direct.addProvider(Ext.app.REMOTING_API);

        var running = @ViewData["uploadIsRunning"].ToString().ToLower();

        var background = '#9ccea9';
        if (running) {
            background = '#ff8566';
        }


        var headerPanel = new Ext.FormPanel({
        width: '100%',
        height: 200,
        labelWidth: 300,
        //layout: 'hbox',
        bodyStyle: { "background-color": background },
        items: [
            {
                xtype: 'textfield',
                fieldLabel: 'Текущий статус',
                forId: 'uploadStatus',
                text: 'Open',
                disabled: true,
                labelStyle: 'padding:0px 10px',
                hidden: !running,
                width: 300,
                value:  @Html.Raw(@ViewData["uploadStatus"].ToString())

            }, {
                xtype: 'textfield',
                fieldLabel: 'Дата запуска',
                forId: 'uploadStart',
                text: 'Open',
                disabled: true,
                labelStyle: 'padding:0px 10px',
                width: 300,
                value: @Html.Raw(@ViewData["uploadStart"].ToString()),
                hidden: !running

            }, {
                xtype: 'textfield',
                fieldLabel: 'Автор запуска',
                forId: 'userNameStart',
                text: 'Open',
                disabled: true,
                labelStyle: 'padding:0px 10px',
                width: 300,
                value: @Html.Raw(@ViewData["userNameStart"].ToString()),
                hidden: !running

            }, {
                xtype: 'textfield',
                fieldLabel: 'Общее количество договоров',
                forId: 'contractCount',
                text: 'Open',
                disabled: true,
                labelStyle: 'padding:0px 10px',
                value: @Html.Raw(@ViewData["contractCount"].ToString()),
                width: 300,
                hidden: !running

            }, {
                xtype: 'textfield',
                fieldLabel: 'Количество скачанных договоров',
                forId: 'contractUploadedCount',
                text: 'Open',
                disabled: true,
                labelStyle: 'padding:0px 10px',
                value: @Html.Raw(@ViewData["contractUploadedCount"].ToString()),
                width: 300,
                hidden: !running

            }, {
                xtype: 'textfield',
                fieldLabel: 'Количество заархивированных договоров',
                forId: 'contractZippedCount',
                text: 'Open',
                disabled: true,
                labelStyle: 'padding:0px 10px',
                value: @Html.Raw(@ViewData["contractZippedCount"].ToString()),
                width: 300,
                hidden: !running

            }, {
                xtype: 'textfield',
                fieldLabel: 'Количество ошибочных договоров',
                forId: 'contractErrorCount',
                text: 'Open',
                disabled: true,
                labelStyle: 'padding:0px 10px',
                value: @Html.Raw(@ViewData["contractErrorCount"].ToString()),
                width: 300,
                hidden: !running

            },
            {
                html: '<p style= "text-align: center;background-color:#9ccea9; font: normal 20px courier" >На текущий момент НЕТ запущенных выгрузок.</p >',
                hidden: running
            }]
    });


        var fp = new Ext.FormPanel({
            fileUpload: true,
            width: '100%',
            autoHeight: true,
            bodyStyle: 'padding: 10px 10px 0 10px;',
            labelWidth: 1,
            defaults: {
                allowBlank: false
            },
            items: [{
                xtype: 'fieldset',
                items: [
                    {
                        xtype: 'fileuploadfield',
                        id: 'form-file',
                        allowBlank: false,
                        acceptMimes: [ 'xls', 'xlsx'],
                        emptyText: 'Прикрепите файл с договорами',
                        fieldLabel: '',
                        width: 700,
                        name: 'photo-path',
                        buttonCfg: {
                            text: 'Обзор...'
                        },
                        listeners: {
                            afterrender: function(me) {
                                me.fileInput.set({
                                    accept:'.xlsx,.csv'
                                });
                            }
                        }
                    }
                ]

            }, {
                xtype: 'fieldset',
                combineErrors: false,
                layout: 'hbox',
                bodyStyle: 'padding-left: 7px;',
                defaults: {
                    hideLabel: true,
                    margin: '10 0 0 0',

                    border: false
                },
                items: [{
                    name: 'uploadLocation',
                    id: 'uploadLocation',
                    xtype: 'textfield',
                    emptyText: 'Выберите папку для выгрузки',
                    width: 625,
                    allowBlank: false
                }, {
                    xtype: 'label',
                    html: '&nbsp;'
                },{
                    name: 'browse',
                    xtype: 'button',
                    width: 70,
                    height: 22,

                    text: 'Обзор...',
                    handler: function () {
                        var winCmp = Ext.getCmp('selWin');

                        if (winCmp) {
                            winCmp.show();
                        } else {
                            var win = new Ext.Window({
                            minimizable: false,
                            maximizable: false,
                            id: 'selWin',
                            layout: 'fit',
                            title: "Выберите папку для выгрузки.",
                            height: 300,
                            width: 300,
                            items:[
                                {
                                    xtype: 'grid',
                                    sm:new Ext.grid.RowSelectionModel({
                                        singleSelect:true,
                                        listeners:{
                                            scope:this,
                                            rowselect:function(args) {
                                                var ul = Ext.getCmp('uploadLocation');
                                                if (ul) {
                                                    ul.setValue(args.selections.items[0]["data"]['path']);
                                                    var selWin = Ext.getCmp('selWin');
                                                    if (selWin) {
                                                        selWin.hide();
                                                    }
                                                }
                                            }
                                        }
                                    }),
                                    columns: [
                                        {
                                            header: "id",
                                            align: 'left',
                                            width: 30,
                                            sortable: true,
                                            dataIndex: 'id',
                                            hidden: true
                                        },
                                        {
                                            header: "Папка",
                                            align: 'left',
                                            width: 300,
                                            sortable: true,
                                            dataIndex: 'path'
                                        }
                                    ],
                                    store: new Ext.data.JsonStore({
                                        autoLoad: true,
                                        fields: [{ name: 'id' }, { name: 'path'}],
                                        idProperty: 'id',
                                        type: 'ajax',
                                        url: "@Url.Action("GetDirectoryList", "Work", null, Request.Url.Scheme, null)"

                                    }),
                                    view: new Ext.grid.GridView({
                                        forceFit: false
                                    })
                                }]
                        }).show();
                        }



                     }
                    }
                    ]
                }, {
                    xtype: 'fieldset',
                    combineErrors: false,
                    layout: 'hbox',
                    bodyStyle: 'padding-left: 7px;',
                    defaults: {
                        hideLabel: true,
                        margin: '0 15 0 0',
                        border: false
                    },
                    items:[
                        {
                            xtype: 'textfield',
                            id: 'userEmail',
                            name: 'userEmail',
                            emptyText: 'Заполните свой email адрес',
                            vtype: 'email',
                            width: 625,
                            allowBlank: false
                        }]
                }
            ]
        });


        var win = new Ext.Window({
            minimizable: false,
            maximizable: false,
            draggable: true,
            closable: false,
            title: "Область работы с выгрузками",
            height: 500,
            width: 900,
            center: function () {
                var me = this
                    , top  = window.pageYOffset || document.documentElement.scrollTop
                    , left = window.pageXOffset || document.documentElement.scrollLeft
                    , size = Ext.Element.getViewSize()
                    ;

                me.setXY([
                    left+(size.width-me.getWidth())/2,
                    top+(size.height-me.getHeight())/2
                ]);
            },
            bodyStyle: 'padding: 10px 10px 0 10px;',
            labelWidth: 50,
            defaults: {
                anchor: '95%',
                allowBlank: false
            },
            items: [
                headerPanel,
                fp

            ],
            buttons: [{
                    text: 'Начать выгрузку',
                    id: 'startDwlBtn',
                    listeners: {
                        afterrender: function() {
                            if (running) {
                                var btn = Ext.getCmp('startDwlBtn');
                                btn.setDisabled(true);
                            }
                        }
                    },
                    handler: function () {
                        var form = fp.getForm();
                        

                        if (form.isValid()) {
                            form.submit({
                                url: "@Url.Action("StartDownload", "Work", null, Request.Url.Scheme, null)",
                                waitMsg: 'Загрузка документа...'
                            });


                            function checkStatus() {
                                Work.GetUnloadStatus(function (result, response) {
                                    Ext.MessageBox.show({
                                        title: 'Информация.',
                                        msg: result.msg,
                                        buttons: Ext.MessageBox.OK,
                                        fn(btn) {
                                            window.location.reload();
                                        }

                                    });
                                });
                            }

                            setTimeout(checkStatus, 5000);
                        }

                        
                    }
                },
                {
                    text: 'Сбросить заполненные поля',
                    handler: function(){
                        fp.getForm().reset();
                    }
                },
                {
                    text: 'Прервать текущую выгрузку',
                    handler: function() {
                        Work.CancelJob();
                    }
                }]
        });
        win.show();



    });


</script>



</head>
<body>
    <div>
    </div>
</body>
</html>
